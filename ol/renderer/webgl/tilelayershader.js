'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vertex = exports.fragment = undefined;

var _webgl = require('../../webgl.js');

var _Fragment = require('../../webgl/Fragment.js');

var _Fragment2 = _interopRequireDefault(_Fragment);

var _Vertex = require('../../webgl/Vertex.js');

var _Vertex2 = _interopRequireDefault(_Vertex);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var fragment = exports.fragment = new _Fragment2.default(_webgl.DEBUG ? 'precision mediump float;\nvarying vec2 v_texCoord;\n\n\nuniform sampler2D u_texture;\n\nvoid main(void) {\n  gl_FragColor = texture2D(u_texture, v_texCoord);\n}\n' : 'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}'); /**
                                                                                                                                                                                                                                                                                                                                                             * @module ol/renderer/webgl/tilelayershader
                                                                                                                                                                                                                                                                                                                                                             */
// This file is automatically generated, do not edit.
// Run `make shaders` to generate, and commit the result.

var vertex = exports.vertex = new _Vertex2.default(_webgl.DEBUG ? 'varying vec2 v_texCoord;\n\n\nattribute vec2 a_position;\nattribute vec2 a_texCoord;\nuniform vec4 u_tileOffset;\n\nvoid main(void) {\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\n  v_texCoord = a_texCoord;\n}\n\n\n' : 'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');

//# sourceMappingURL=tilelayershader.js.map